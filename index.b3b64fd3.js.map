{"mappings":"A,S,E,C,C,C,E,C,A,M,G,E,E,M,A,G,C,E,E,M,A,E,I,I,E,E,E,A,M,G,E,E,I,C,C,E,C,C,C,E,C,O,C,CCIA,IAAM,EAAQ,SAAS,aAAa,CAAC,SAC/B,EAAS,SAAS,aAAa,CAAC,SAChC,EAAc,CAAE,OAAQ,KAAM,UAAW,CAAA,CAAK,EAmDpD,EAAO,gBAAgB,CAAC,QAAS,SAAC,CAAlC,EACE,IAjDM,EAoBoB,EAAc,EA6BlC,EAAe,EAAE,MAAM,CAAC,WAAW,CAAC,IAAI,EAE1C,CAAA,EAAY,MAAM,GAAK,EACzB,EAAY,SAAS,CAAG,CAAC,EAAY,SAAS,EAE9C,EAAY,MAAM,CAAG,EACrB,EAAY,SAAS,CAAG,CAAA,GAG1B,IAAM,GA1DA,EAAO,MAAM,IAAI,CAAC,EAAM,gBAAgB,CAAC,aAAa,GAAG,CAAC,SAAC,CAAjE,EACE,OAAO,EAAG,WAAW,CAAC,IAAI,EAC5B,GAkB0B,EAdX,AAFA,MAAM,IAAI,CAAC,EAAM,gBAAgB,CAAC,aAE3B,GAAG,CAAC,SAAC,CAA3B,EACE,IAAM,EAAQ,MAAM,IAAI,CAAC,EAAI,gBAAgB,CAAC,OACxC,EAAS,CAAC,EAMhB,OAJA,EAAK,OAAO,CAAC,SAAC,CAAA,CAAK,CAAnB,EACE,CAAM,CAAC,EAAI,CAAG,CAAK,CAAC,EAAM,CAAC,WAAW,CAAC,IAAI,EAC7C,GAEO,CACT,GAKwC,EAyCtC,EAAY,SAAS,CAxCN,A,C,A,C,S,C,E,G,M,O,C,G,O,E,E,C,EAAI,I,A,S,C,E,G,A,a,O,Q,A,M,C,C,O,Q,C,E,A,M,C,C,a,C,O,M,I,C,E,EAAA,I,A,S,C,C,C,E,G,G,G,A,U,O,E,O,E,E,K,G,I,E,O,S,C,Q,C,I,C,G,K,C,E,I,G,W,G,E,W,E,C,E,E,W,C,I,A,E,A,Q,G,A,Q,E,O,M,I,C,G,G,A,c,G,2C,I,C,G,O,E,E,K,G,EAAA,I,A,W,M,A,U,wI,G,EAAc,IAAI,CAAC,SAAC,CAAA,CAAG,CAA5C,EACE,GACE,AAAoB,UAApB,OAAO,CAAC,CAoCV,EApCiB,EACf,AAAoB,UAApB,OAAO,CAAC,CAmCV,EAnCiB,EACf,CAAC,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","sources":["<anon>","src/scripts/main.js"],"sourcesContent":["\"use strict\";\nfunction _array_like_to_array(arr, len) {\n    if (len == null || len > arr.length) len = arr.length;\n    for(var i = 0, arr2 = new Array(len); i < len; i++)arr2[i] = arr[i];\n    return arr2;\n}\nfunction _array_without_holes(arr) {\n    if (Array.isArray(arr)) return _array_like_to_array(arr);\n}\nfunction _iterable_to_array(iter) {\n    if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}\nfunction _non_iterable_spread() {\n    throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\nfunction _to_consumable_array(arr) {\n    return _array_without_holes(arr) || _iterable_to_array(arr) || _unsupported_iterable_to_array(arr) || _non_iterable_spread();\n}\nfunction _unsupported_iterable_to_array(o, minLen) {\n    if (!o) return;\n    if (typeof o === \"string\") return _array_like_to_array(o, minLen);\n    var n = Object.prototype.toString.call(o).slice(8, -1);\n    if (n === \"Object\" && o.constructor) n = o.constructor.name;\n    if (n === \"Map\" || n === \"Set\") return Array.from(n);\n    if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _array_like_to_array(o, minLen);\n}\n// write code here\nvar table = document.querySelector(\"table\");\nvar header = document.querySelector(\"thead\");\nvar currentSort = {\n    column: null,\n    ascending: true\n};\nfunction getPeople() {\n    var keys = Array.from(table.querySelectorAll(\"thead th\")).map(function(th) {\n        return th.textContent.trim();\n    });\n    var values = Array.from(table.querySelectorAll(\"tbody tr\"));\n    var people = values.map(function(row) {\n        var cells = Array.from(row.querySelectorAll(\"td\"));\n        var person = {};\n        keys.forEach(function(key, index) {\n            person[key] = cells[index].textContent.trim();\n        });\n        return person;\n    });\n    return people;\n}\nfunction sortByClick(field, arrayForSort, isAscending) {\n    var newArray = _to_consumable_array(arrayForSort).sort(function(a, b) {\n        if (typeof a[field] === \"string\" && typeof b[field] === \"string\" && !a[field].includes(\"$\")) return isAscending ? a[field].localeCompare(b[field]) : b[field].localeCompare(a[field]);\n        var val1 = a[field].replace(/[$,]/g, \"\");\n        var val2 = b[field].replace(/[$,]/g, \"\");\n        return isAscending ? val1 - val2 : val2 - val1;\n    });\n    return newArray;\n}\nfunction addingContent(textContent, rowToAppend) {\n    var td = document.createElement(\"td\");\n    td.textContent = textContent;\n    rowToAppend.appendChild(td);\n}\nheader.addEventListener(\"click\", function(e) {\n    var fieldForSort = e.target.textContent.trim();\n    if (currentSort.column === fieldForSort) currentSort.ascending = !currentSort.ascending;\n    else {\n        currentSort.column = fieldForSort;\n        currentSort.ascending = true;\n    }\n    var newPeople = sortByClick(fieldForSort, getPeople(), currentSort.ascending);\n    var tbody = table.querySelector(\"tbody\");\n    tbody.innerHTML = \"\";\n    newPeople.forEach(function(person) {\n        var tr = document.createElement(\"tr\");\n        var _iteratorNormalCompletion = true, _didIteratorError = false, _iteratorError = undefined;\n        try {\n            for(var _iterator = Object.keys(person)[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true){\n                var key = _step.value;\n                addingContent(person[key], tr);\n            }\n        } catch (err) {\n            _didIteratorError = true;\n            _iteratorError = err;\n        } finally{\n            try {\n                if (!_iteratorNormalCompletion && _iterator.return != null) {\n                    _iterator.return();\n                }\n            } finally{\n                if (_didIteratorError) {\n                    throw _iteratorError;\n                }\n            }\n        }\n        tbody.appendChild(tr);\n    });\n});\ntable.addEventListener(\"click\", function(e) {\n    var tr = e.target.closest(\"tr\");\n    if (tr) {\n        var rows = table.querySelectorAll(\"tr\");\n        rows.forEach(function(row) {\n            return row.classList.remove(\"active\");\n        });\n        tr.classList.add(\"active\");\n    }\n});\nfunction addEmployeeToTable(employee) {\n    // Find the table body\n    var tbody = table.querySelector(\"tbody\");\n    // Create a new row\n    var row = document.createElement(\"tr\");\n    // Create and append cells for each employee property\n    var properties = [\n        \"name\",\n        \"position\",\n        \"office\",\n        \"age\",\n        \"salary\"\n    ];\n    properties.forEach(function(prop) {\n        var cell = document.createElement(\"td\");\n        cell.textContent = employee[prop];\n        row.appendChild(cell);\n    });\n    // Append the new row to the table body\n    tbody.appendChild(row);\n    return true;\n}\nfunction validateFormData(data) {\n    if (!Object.values(data).every(function(value) {\n        return value !== null && value !== undefined && value !== \"\";\n    })) {\n        pushNotification(580, 275, \"Error Message\", \"Error: Some fields are empty\", \"error\");\n        return false;\n    }\n    if (data.name.length < 4) {\n        pushNotification(580, 275, \"Error Message\", \"Error: Name must be at least 4 characters long.\", \"error\");\n        return false;\n    }\n    if (data.age < 18 || data.age > 90) {\n        pushNotification(580, 275, \"Erroe message\", \"Error: Age must be between 18 and 90.\", \"error\");\n        return false;\n    }\n    return true;\n}\nfunction createEmployeeForm() {\n    var formOnCreate = document.createElement(\"form\");\n    formOnCreate.className = \"new-employee-form\";\n    formOnCreate.id = \"employeeForm\";\n    var fields = [\n        {\n            fieldType: \"input\",\n            label: \"Name\",\n            type: \"text\",\n            name: \"name\",\n            qa: \"name\"\n        },\n        {\n            fieldType: \"input\",\n            label: \"Position\",\n            type: \"text\",\n            name: \"position\",\n            qa: \"position\"\n        },\n        {\n            fieldType: \"select\",\n            label: \"Office\",\n            name: \"office\",\n            qa: \"office\",\n            options: [\n                \"Tokyo\",\n                \"Singapore\",\n                \"London\",\n                \"New York\",\n                \"Edinburgh\",\n                \"San Francisco\"\n            ]\n        },\n        {\n            fieldType: \"input\",\n            label: \"Age\",\n            type: \"number\",\n            name: \"age\",\n            qa: \"age\"\n        },\n        {\n            fieldType: \"input\",\n            label: \"Salary\",\n            type: \"number\",\n            name: \"salary\",\n            qa: \"salary\"\n        }\n    ];\n    fields.forEach(function(field) {\n        var label = document.createElement(\"label\");\n        label.textContent = \"\".concat(field.label, \": \");\n        if (field.fieldType === \"input\") {\n            var input = document.createElement(\"input\");\n            input.type = field.type;\n            input.name = field.name;\n            input.setAttribute(\"data-qa\", field.qa);\n            input.required = true;\n            label.appendChild(input);\n            formOnCreate.appendChild(label);\n            formOnCreate.appendChild(document.createElement(\"br\"));\n        } else if (field.fieldType === \"select\") {\n            var select = document.createElement(\"select\");\n            select.name = \"office\";\n            select.setAttribute(\"data-qa\", \"office\");\n            select.required = true;\n            field.options.forEach(function(opt) {\n                var option = document.createElement(\"option\");\n                option.value = opt;\n                option.textContent = opt;\n                select.appendChild(option);\n            });\n            label.appendChild(select);\n            formOnCreate.appendChild(label);\n            formOnCreate.appendChild(document.createElement(\"br\"));\n        }\n    });\n    var submitButton = document.createElement(\"button\");\n    submitButton.type = \"submit\";\n    submitButton.textContent = \"Save to table\";\n    formOnCreate.appendChild(submitButton);\n    document.body.appendChild(formOnCreate);\n}\ndocument.addEventListener(\"DOMContentLoaded\", function() {\n    createEmployeeForm();\n    var button = document.querySelector(\"button\");\n    var form = document.querySelector(\"form\");\n    button.addEventListener(\"click\", function(e) {\n        e.preventDefault();\n        var formData = {\n            name: form.name.value,\n            position: form.position.value,\n            office: form.office.value,\n            age: parseInt(form.age.value, 10),\n            salary: \"$\" + parseInt(form.salary.value).toLocaleString(\"en-US\")\n        };\n        if (validateFormData(formData)) {\n            addEmployeeToTable(formData);\n            pushNotification(580, 275, \"Success message\", \"Success: Employee added to the table.\", \"success\");\n            form.reset();\n        }\n    });\n    var _iteratorNormalCompletion = true, _didIteratorError = false, _iteratorError = undefined;\n    try {\n        var _loop = function() {\n            var td = _step.value;\n            td.addEventListener(\"dblclick\", function() {\n                return editable.edit(td);\n            });\n        };\n        for(var _iterator = document.querySelectorAll(\"td\")[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true)_loop();\n    } catch (err) {\n        _didIteratorError = true;\n        _iteratorError = err;\n    } finally{\n        try {\n            if (!_iteratorNormalCompletion && _iterator.return != null) {\n                _iterator.return();\n            }\n        } finally{\n            if (_didIteratorError) {\n                throw _iteratorError;\n            }\n        }\n    }\n});\nvar pushNotification = function(posTop, posRight, title, description, type) {\n    var textContainer = document.createElement(\"div\");\n    textContainer.className = \"notification \".concat(type);\n    textContainer.setAttribute(\"data-qa\", \"notification\");\n    Object.assign(textContainer.style, {\n        top: \"\".concat(posTop, \"px\"),\n        right: \"\".concat(posRight, \"px\")\n    });\n    textContainer.innerHTML = '\\n    <h2 class=\"title\">'.concat(title, \"</h2>\\n    <p>\").concat(description, \"</p>\\n  \");\n    document.body.append(textContainer);\n    setTimeout(function() {\n        return textContainer.style.visibility = \"hidden\";\n    }, 2000);\n};\nvar editable = {\n    ccell: null,\n    cval: null,\n    edit: function(cell) {\n        editable.ccell = cell;\n        editable.cval = cell.innerHTML;\n        cell.classList.add(\"cell-input\");\n        cell.contentEditable = true;\n        cell.focus();\n        cell.onblur = editable.done;\n        cell.onkeydown = function(e) {\n            if (e.key === \"Enter\") editable.done();\n            if (e.key === \"Escape\") editable.done(1);\n        };\n    },\n    done: function(discard) {\n        editable.ccell.onblur = \"\";\n        editable.ccell.onkeydown = \"\";\n        editable.ccell.classList.remove(\"cell-input\");\n        editable.ccell.contentEditable = false;\n        if (discard === 1) editable.ccell.innerHTML = editable.cval;\n    }\n};\n\n//# sourceMappingURL=index.b3b64fd3.js.map\n","'use strict';\n\n// write code here\n\nconst table = document.querySelector('table');\nconst header = document.querySelector('thead');\nconst currentSort = { column: null, ascending: true };\n\nfunction getPeople() {\n  const keys = Array.from(table.querySelectorAll('thead th')).map((th) => {\n    return th.textContent.trim();\n  });\n\n  const values = Array.from(table.querySelectorAll('tbody tr'));\n\n  const people = values.map((row) => {\n    const cells = Array.from(row.querySelectorAll('td'));\n    const person = {};\n\n    keys.forEach((key, index) => {\n      person[key] = cells[index].textContent.trim();\n    });\n\n    return person;\n  });\n\n  return people;\n}\n\nfunction sortByClick(field, arrayForSort, isAscending) {\n  const newArray = [...arrayForSort].sort((a, b) => {\n    if (\n      typeof a[field] === 'string' &&\n      typeof b[field] === 'string' &&\n      !a[field].includes('$')\n    ) {\n      return isAscending\n        ? a[field].localeCompare(b[field])\n        : b[field].localeCompare(a[field]);\n    }\n\n    const val1 = a[field].replace(/[$,]/g, '');\n    const val2 = b[field].replace(/[$,]/g, '');\n\n    return isAscending ? val1 - val2 : val2 - val1;\n  });\n\n  return newArray;\n}\n\nfunction addingContent(textContent, rowToAppend) {\n  const td = document.createElement('td');\n\n  td.textContent = textContent;\n  rowToAppend.appendChild(td);\n}\n\nheader.addEventListener('click', (e) => {\n  const fieldForSort = e.target.textContent.trim();\n\n  if (currentSort.column === fieldForSort) {\n    currentSort.ascending = !currentSort.ascending;\n  } else {\n    currentSort.column = fieldForSort;\n    currentSort.ascending = true;\n  }\n\n  const newPeople = sortByClick(\n    fieldForSort,\n    getPeople(),\n    currentSort.ascending,\n  );\n\n  const tbody = table.querySelector('tbody');\n\n  tbody.innerHTML = '';\n\n  newPeople.forEach((person) => {\n    const tr = document.createElement('tr');\n\n    for (const key of Object.keys(person)) {\n      addingContent(person[key], tr);\n    }\n\n    tbody.appendChild(tr);\n  });\n});\n\ntable.addEventListener('click', (e) => {\n  const tr = e.target.closest('tr');\n\n  if (tr) {\n    const rows = table.querySelectorAll('tr');\n\n    rows.forEach((row) => row.classList.remove('active'));\n    tr.classList.add('active');\n  }\n});\n\nfunction addEmployeeToTable(employee) {\n  // Find the table body\n  const tbody = table.querySelector('tbody');\n\n  // Create a new row\n  const row = document.createElement('tr');\n\n  // Create and append cells for each employee property\n  const properties = ['name', 'position', 'office', 'age', 'salary'];\n\n  properties.forEach((prop) => {\n    const cell = document.createElement('td');\n\n    cell.textContent = employee[prop];\n    row.appendChild(cell);\n  });\n\n  // Append the new row to the table body\n  tbody.appendChild(row);\n\n  return true;\n}\n\nfunction validateFormData(data) {\n  if (\n    !Object.values(data).every(\n      (value) => value !== null && value !== undefined && value !== '',\n    )\n  ) {\n    pushNotification(\n      580,\n      275,\n      'Error Message',\n      'Error: Some fields are empty',\n      'error',\n    );\n\n    return false;\n  }\n\n  if (data.name.length < 4) {\n    pushNotification(\n      580,\n      275,\n      'Error Message',\n      'Error: Name must be at least 4 characters long.',\n      'error',\n    );\n\n    return false;\n  }\n\n  if (data.age < 18 || data.age > 90) {\n    pushNotification(\n      580,\n      275,\n      'Erroe message',\n      'Error: Age must be between 18 and 90.',\n      'error',\n    );\n\n    return false;\n  }\n\n  return true;\n}\n\nfunction createEmployeeForm() {\n  const formOnCreate = document.createElement('form');\n\n  formOnCreate.className = 'new-employee-form';\n  formOnCreate.id = 'employeeForm';\n\n  const fields = [\n    {\n      fieldType: 'input',\n      label: 'Name',\n      type: 'text',\n      name: 'name',\n      qa: 'name',\n    },\n    {\n      fieldType: 'input',\n      label: 'Position',\n      type: 'text',\n      name: 'position',\n      qa: 'position',\n    },\n    {\n      fieldType: 'select',\n      label: 'Office',\n      name: 'office',\n      qa: 'office',\n      options: [\n        'Tokyo',\n        'Singapore',\n        'London',\n        'New York',\n        'Edinburgh',\n        'San Francisco',\n      ],\n    },\n    {\n      fieldType: 'input',\n      label: 'Age',\n      type: 'number',\n      name: 'age',\n      qa: 'age',\n    },\n    {\n      fieldType: 'input',\n      label: 'Salary',\n      type: 'number',\n      name: 'salary',\n      qa: 'salary',\n    },\n  ];\n\n  fields.forEach((field) => {\n    const label = document.createElement('label');\n\n    label.textContent = `${field.label}: `;\n\n    if (field.fieldType === 'input') {\n      const input = document.createElement('input');\n\n      input.type = field.type;\n      input.name = field.name;\n      input.setAttribute('data-qa', field.qa);\n      input.required = true;\n\n      label.appendChild(input);\n      formOnCreate.appendChild(label);\n      formOnCreate.appendChild(document.createElement('br'));\n    } else if (field.fieldType === 'select') {\n      const select = document.createElement('select');\n\n      select.name = 'office';\n      select.setAttribute('data-qa', 'office');\n      select.required = true;\n\n      field.options.forEach((opt) => {\n        const option = document.createElement('option');\n\n        option.value = opt;\n        option.textContent = opt;\n        select.appendChild(option);\n      });\n\n      label.appendChild(select);\n      formOnCreate.appendChild(label);\n      formOnCreate.appendChild(document.createElement('br'));\n    }\n  });\n\n  const submitButton = document.createElement('button');\n\n  submitButton.type = 'submit';\n  submitButton.textContent = 'Save to table';\n  formOnCreate.appendChild(submitButton);\n\n  document.body.appendChild(formOnCreate);\n}\n\ndocument.addEventListener('DOMContentLoaded', function () {\n  createEmployeeForm();\n\n  const button = document.querySelector('button');\n  const form = document.querySelector('form');\n\n  button.addEventListener('click', function (e) {\n    e.preventDefault();\n\n    const formData = {\n      name: form.name.value,\n      position: form.position.value,\n      office: form.office.value,\n      age: parseInt(form.age.value, 10),\n      salary: '$' + parseInt(form.salary.value).toLocaleString('en-US'),\n    };\n\n    if (validateFormData(formData)) {\n      addEmployeeToTable(formData);\n\n      pushNotification(\n        580,\n        275,\n        'Success message',\n        'Success: Employee added to the table.',\n        'success',\n      );\n      form.reset();\n    }\n  });\n\n  for (const td of document.querySelectorAll('td')) {\n    td.addEventListener('dblclick', () => editable.edit(td));\n  }\n});\n\nconst pushNotification = (posTop, posRight, title, description, type) => {\n  const textContainer = document.createElement('div');\n\n  textContainer.className = `notification ${type}`;\n  textContainer.setAttribute('data-qa', 'notification');\n\n  Object.assign(textContainer.style, {\n    top: `${posTop}px`,\n    right: `${posRight}px`,\n  });\n\n  textContainer.innerHTML = `\n    <h2 class=\"title\">${title}</h2>\n    <p>${description}</p>\n  `;\n\n  document.body.append(textContainer);\n\n  setTimeout(() => (textContainer.style.visibility = 'hidden'), 2000);\n};\n\nconst editable = {\n  ccell: null,\n  cval: null,\n\n  edit: (cell) => {\n    editable.ccell = cell;\n    editable.cval = cell.innerHTML;\n\n    cell.classList.add('cell-input');\n    cell.contentEditable = true;\n    cell.focus();\n\n    cell.onblur = editable.done;\n\n    cell.onkeydown = (e) => {\n      if (e.key === 'Enter') {\n        editable.done();\n      }\n\n      if (e.key === 'Escape') {\n        editable.done(1);\n      }\n    };\n  },\n\n  done: (discard) => {\n    editable.ccell.onblur = '';\n    editable.ccell.onkeydown = '';\n\n    editable.ccell.classList.remove('cell-input');\n    editable.ccell.contentEditable = false;\n\n    if (discard === 1) {\n      editable.ccell.innerHTML = editable.cval;\n    }\n  },\n};\n"],"names":["_array_like_to_array","arr","len","length","i","arr2","Array","table","document","querySelector","header","currentSort","column","ascending","addEventListener","e","keys","arrayForSort","isAscending","fieldForSort","target","textContent","trim","newPeople","from","querySelectorAll","map","th","values","row","cells","person","forEach","key","index","_to_consumable_array","_array_without_holes","isArray","_iterable_to_array","iter","Symbol","iterator","_unsupported_iterable_to_array","o","minLen","n","Object","prototype","toString","call","slice","constructor","name","test","_non_iterable_spread","TypeError","sort","a","b","includes","localeCompare","val1","replace","val2","tbody","innerHTML","tr","createElement","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","next","done","value","addingContent","rowToAppend","td","appendChild","err","return","closest","rows","classList","remove","add","formOnCreate","className","id","fields","fieldType","label","type","qa","options","field","concat","input","setAttribute","required","select","opt","option","submitButton","body","button","form","preventDefault","formData","position","office","age","parseInt","salary","toLocaleString","every","data","pushNotification","properties","prop","cell","employee","reset","_loop","editable","edit","posTop","posRight","title","description","textContainer","assign","style","top","right","append","setTimeout","visibility","ccell","cval","contentEditable","focus","onblur","onkeydown","discard"],"version":3,"file":"index.b3b64fd3.js.map"}